name: Build & Release Binaries

on:
  workflow_dispatch:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build:
    name: Build and Upload
    runs-on: windows-latest
    env:
      APP_NAME: screen-tester

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'

      - name: Get Build Info
        shell: pwsh
        run: |
          $BUILD_DATE = (Get-Date).ToUniversalTime().ToString("yyyy-MM-ddTHH:mm:ssZ")
          Write-Host "BUILD_DATE=$BUILD_DATE" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append

          if ($env:GITHUB_REF -like 'refs/tags/*') {
            $VERSION = $env:GITHUB_REF -replace 'refs/tags/', ''
          } else {
            $VERSION = 'dev'
          }
          Write-Host "VERSION=$VERSION" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append

      - name: Build
        shell: pwsh
        run: |
          $OUTPUT_NAME = "${env:APP_NAME}-windows-amd64-v${env:VERSION}.exe"
          Write-Host "Building $OUTPUT_NAME"
          $env:GOOS = "windows"
          $env:GOARCH = "amd64"
          go build -o $OUTPUT_NAME -ldflags "-X github.com/keshon/screen-tester/internal/version.BuildDate=${env:BUILD_DATE} -X github.com/keshon/screen-tester/internal/version.GoVersion=$(go version | ForEach-Object { ($_ -split ' ')[2] })" ./cmd/screen-tester/main.go
          Write-Host "OUTPUT_NAME=$OUTPUT_NAME" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.OUTPUT_NAME }}
          path: ${{ env.OUTPUT_NAME }}

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./release

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Release Assets
        uses: softprops/action-gh-release@v1
        with:
          files: ./release/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
