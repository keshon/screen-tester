name: Build and Release

on:
  push:
    branches: [ "main" ]
    tags: [ "v*" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # Build for multiple platforms
        include:
          - goos: windows
            goarch: amd64
            ext: .exe
          - goos: windows
            goarch: arm64
            ext: .exe
          - goos: linux
            goarch: amd64
            ext: ""
          - goos: linux
            goarch: arm64
            ext: ""
          - goos: darwin
            goarch: amd64
            ext: ""
          - goos: darwin
            goarch: arm64
            ext: ""

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'  # Update to a newer version
        
    - name: Get dependencies
      run: go mod download
      
    - name: Set build variables
      run: |
        echo "BUILD_DATE=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" >> $GITHUB_ENV
        echo "GO_VERSION=$(go version | cut -d' ' -f3)" >> $GITHUB_ENV
        
    - name: Build binary
      env:
        GOOS: ${{ matrix.goos }}
        GOARCH: ${{ matrix.goarch }}
        CGO_ENABLED: 0
      run: |
        mkdir -p dist
        go build \
          -o dist/screen-tester-${{ matrix.goos }}-${{ matrix.goarch }}${{ matrix.ext }} \
          -ldflags "-s -w -X app/internal/version.BuildDate=${{ env.BUILD_DATE }} -X app/internal/version.GoVersion=${{ env.GO_VERSION }}" \
          cmd/screen-tester/main.go
          
    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: screen-tester-${{ matrix.goos }}-${{ matrix.goarch }}
        path: dist/screen-tester-${{ matrix.goos }}-${{ matrix.goarch }}${{ matrix.ext }}

  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'
        
    - name: Run tests
      run: go test -v ./...

  # Optional: Create a release when you push a tag
  release:
    needs: [build, test]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v3
      
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          screen-tester-*/screen-tester-*
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}