name: Build and Release

on:
  push:
    branches: [ "main" ]
    tags: [ "v*" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ${{ matrix.runner }}
    strategy:
      matrix:
        # Build for multiple platforms - limited due to CGO/OpenGL requirements
        include:
          - goos: windows
            goarch: amd64
            ext: .exe
            runner: windows-latest
          - goos: linux
            goarch: amd64
            ext: ""
            runner: ubuntu-latest
          - goos: darwin
            goarch: amd64
            ext: ""
            runner: macos-latest
          - goos: darwin
            goarch: arm64
            ext: ""
            runner: macos-latest

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'  # Update to a newer version
        
    - name: Install dependencies (Linux)
      if: matrix.goos == 'linux'
      run: |
        sudo apt-get update
        sudo apt-get install -y libgl1-mesa-dev xorg-dev
        
    - name: Install dependencies (macOS)
      if: matrix.goos == 'darwin'
      run: |
        # macOS should have OpenGL frameworks built-in
        echo "macOS OpenGL frameworks should be available"
      
    - name: Get dependencies
      run: go mod download
        
    - name: Set build variables
      run: |
        echo "BUILD_DATE=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" >> $GITHUB_ENV
        echo "GO_VERSION=$(go version | cut -d' ' -f3)" >> $GITHUB_ENV
        
    - name: Build binary
      env:
        GOOS: ${{ matrix.goos }}
        GOARCH: ${{ matrix.goarch }}
        CGO_ENABLED: 1
      run: |
        mkdir -p dist
        go build \
          -o dist/screen-tester-${{ matrix.goos }}-${{ matrix.goarch }}${{ matrix.ext }} \
          -ldflags "-s -w -X github.com/keshon/screen-tester/internal/version.BuildDate=${{ env.BUILD_DATE }} -X github.com/keshon/screen-tester/internal/version.GoVersion=${{ env.GO_VERSION }}" \
          cmd/screen-tester/main.go
          
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: screen-tester-${{ matrix.goos }}-${{ matrix.goarch }}
        path: dist/screen-tester-${{ matrix.goos }}-${{ matrix.goarch }}${{ matrix.ext }}

  # Optional: Create a release when you push a tag
  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: ./artifacts
        
    - name: Prepare release files
      run: |
        mkdir -p release-files
        find ./artifacts -name "screen-tester-*" -type f -exec cp {} ./release-files/ \;
      
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          release-files/*
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}